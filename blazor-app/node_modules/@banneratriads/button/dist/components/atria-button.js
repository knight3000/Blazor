import { p as proxyCustomElement, H, c as createEvent, h } from './p-f45d00a2.js';

const buttonCss = ".bh-btn{font-family:var(--bh-secondary-font-face);font-size:15px;font-weight:500;border-radius:var(--bh-border-radius);height:36px;letter-spacing:0.47px;transition:background-color 0.2s ease-out;text-decoration:none;padding:0 16px;display:inline-block;margin:0;-moz-appearance:none;-webkit-appearance:none;cursor:pointer}.bh-btn i{vertical-align:middle}.bh-btn i.left{margin-right:5px}.bh-btn i.right{margin-left:5px}.bh-btn.bh-primary{background-color:var(--surface-accent);color:var(--text-inverse);border:0}.bh-btn.bh-primary i{color:var(--text-inverse)}.bh-btn.bh-primary.bh-loading{background-color:var(--surface-accent-pressed)}.bh-btn.bh-primary.bh-loading::after{border:2px solid var(--surface-base);border-top-color:transparent}.bh-btn.bh-primary:focus-visible{background-color:var(--surface-accent);box-shadow:0 0 0 2px var(--border-focus), inset 0 0 0 1px var(--text-inverse);outline-color:transparent;outline-width:2px;outline-style:dotted}.bh-btn.bh-primary:hover{background-color:var(--surface-accent-hover);text-decoration:none;color:var(--text-inverse)}.bh-btn.bh-primary:not(:disabled):active,.bh-btn.bh-primary:not(:disabled).active{background-color:var(--surface-accent-pressed)}.bh-btn.bh-primary:focus:active{box-shadow:none}.bh-btn.bh-secondary{background-color:var(--surface-active);color:var(--text-inverse);border:0}.bh-btn.bh-secondary.bh-loading{background-color:var(--surface-active-pressed)}.bh-btn.bh-secondary.bh-loading::after{border:2px solid var(--surface-base);border-top-color:transparent}.bh-btn.bh-secondary:focus-visible{background-color:var(--surface-active);box-shadow:0 0 0 2px var(--border-focus), inset 0 0 0 3px var(--text-inverse);outline-color:transparent;outline-width:2px;outline-style:dotted}.bh-btn.bh-secondary:hover{background-color:var(--surface-active-hover);text-decoration:none;color:var(--text-inverse)}.bh-btn.bh-secondary:not(:disabled):active,.bh-btn.bh-secondary:not(:disabled).active{background-color:var(--surface-active-hover)}.bh-btn.bh-secondary:focus:active{box-shadow:none}.bh-btn.bh-outlined.outline-1{background-color:var(--surface-base);color:var(--text-accent);border:1px solid var(--border-base)}.bh-btn.bh-outlined.outline-1.bh-loading{background-color:var(--surface-base-pressed-accentblue)}.bh-btn.bh-outlined.outline-1.bh-loading::after{border:2px solid var(--surface-accent);border-top-color:transparent}.bh-btn.bh-outlined.outline-1:focus-visible{border:1px solid var(--border-focus);box-shadow:0 0 0 1px var(--border-focus);color:var(--text-accent);outline-color:transparent;outline-width:2px;outline-style:dotted}.bh-btn.bh-outlined.outline-1:hover{text-decoration:none;background-color:var(--surface-base-hover-accentblue);color:var(--text-accent-hover)}.bh-btn.bh-outlined.outline-1:not(:disabled):active,.bh-btn.bh-outlined.outline-1:not(:disabled).active{background-color:var(--surface-base-pressed-accentblue);outline:0;box-shadow:none;border:1px solid var(--border-base);color:var(--text-accent-hover)}.bh-btn.bh-outlined.outline-1.button-link{display:flex;justify-content:space-between;align-items:center;width:304px}@media screen and (max-width: 640px){.bh-btn.bh-outlined.outline-1.button-link{width:100vw}}.bh-btn.bh-outlined.outline-2{background-color:transparent;color:var(--text-inverse);border:1px solid var(--icon-inverse)}.bh-btn.bh-outlined.outline-2.bh-loading{background-color:var(--surface-base-pressed)}.bh-btn.bh-outlined.outline-2.bh-loading::after{border:2px solid var(--surface-accent);border-top-color:transparent}.bh-btn.bh-outlined.outline-2:focus-visible{border:1px solid var(--border-focus);box-shadow:0 0 0 1px var(--text-inverse), 0 0 0 1px var(--border-focus);outline-color:transparent;outline-width:2px;outline-style:dotted}.bh-btn.bh-outlined.outline-2:hover{text-decoration:none;background-color:var(--surface-base-hover);color:var(--text-subtle-hover)}.bh-btn.bh-outlined.outline-2:focus:hover{border:1px solid var(--border-focus)}.bh-btn.bh-outlined.outline-2:not(:disabled):active,.bh-btn.bh-outlined.outline-2:not(:disabled).active{background-color:var(--surface-base-pressed);outline:0;box-shadow:none;color:var(--text-subtle-hover)}.bh-btn.bh-outlined.outline-3{background-color:var(--surface-base);color:var(--text-subtle);border:1px solid var(--border-base)}.bh-btn.bh-outlined.outline-3.bh-loading{background-color:var(--surface-base-pressed)}.bh-btn.bh-outlined.outline-3.bh-loading::after{border:2px solid var(--surface-accent);border-top-color:transparent}.bh-btn.bh-outlined.outline-3:focus-visible{border:1px solid var(--border-focus);box-shadow:0 0 0 1px var(--border-focus);color:var(--text-subtle);outline-color:transparent;outline-width:2px;outline-style:dotted}.bh-btn.bh-outlined.outline-3:focus-visible.bh-outlined-3-button--loading{color:transparent}.bh-btn.bh-outlined.outline-3:hover{text-decoration:none;background-color:var(--surface-base-hover);color:var(--text-subtle-hover)}.bh-btn.bh-outlined.outline-3:not(:disabled):active,.bh-btn.bh-outlined.outline-3:not(:disabled).active{background-color:var(--surface-base-pressed);outline:0;box-shadow:none;border:1px solid var(--border-base);color:var(--text-subtle-hover)}.bh-btn.bh-outlined:focus:active{box-shadow:none}.bh-btn.bh-outlined.disabled{background-color:var(--surface-disabled);color:var(--text-disabled);border:1px solid var(--surface-disabled);cursor:not-allowed;pointer-events:none}.bh-btn.bh-text-btn{background-color:var(--surface-base);color:var(--text-accent);border:1px solid transparent}.bh-btn.bh-text-btn.bh-loading{background-color:var(--surface-base-pressed-accentblue)}.bh-btn.bh-text-btn.bh-loading::after{border:2px solid var(--surface-accent);border-top-color:transparent}.bh-btn.bh-text-btn:focus-visible{border:1px solid var(--border-focus);box-shadow:0 0 0 1px var(--border-focus);color:var(--text-accent);outline-color:transparent;outline-width:2px;outline-style:dotted}.bh-btn.bh-text-btn:focus-visible.bh-text-button--loading{color:transparent}.bh-btn.bh-text-btn:focus:hover{border:1px solid var(--border-focus)}.bh-btn.bh-text-btn:hover{background-color:var(--surface-base-hover-accentblue);color:var(--text-accent-hover);border:1px solid transparent}.bh-btn.bh-text-btn:not(:disabled):active,.bh-btn.bh-text-btn:not(:disabled).active{background-color:var(--surface-base-pressed-accentblue);outline:0;box-shadow:none;border:1px solid transparent;color:var(--text-accent-hover)}.bh-btn.bh-text-btn:focus:active{box-shadow:none}.bh-btn.disabled{background-color:var(--surface-disabled);color:var(--text-disabled);cursor:not-allowed;pointer-events:none}.bh-btn.bh-sm{height:30px;padding:0 8px}.bh-btn.bh-sm.bh-loading::after{width:16px;height:16px;border-width:1px}.bh-btn.bh-lg{height:48px}.bh-btn.bh-lg[href]{line-height:48px}.bh-btn.bh-lg.bh-loading::after{width:24px;height:24px}.bh-btn[href]{line-height:36px}.bh-btn.bh-loading{color:transparent !important;position:relative}.bh-btn.bh-loading::after{content:\"\";position:absolute;display:block;width:20px;height:20px;top:50%;left:50%;transform:translate(-50%, -50%);border-radius:50%;border-top-color:transparent;transform-origin:center center;animation:rotate 2s infinite linear}.bh-btn.bh-loading:hover{color:transparent}.bh-btn--icon-l,.bh-btn--icon-r{display:flex;align-items:center;gap:8px}.bh-btn svg{width:24px;flex:0 0 24px;vertical-align:middle}.bh-btn svg path{fill:var(--icon-inverse)}@keyframes rotate{0%{transform:translate(-50%, -50%) rotate(0deg)}100%{transform:translate(-50%, -50%) rotate(360deg)}}";
const AtriaButtonStyle0 = buttonCss;

const AtriaButtonComponent = /*@__PURE__*/ proxyCustomElement(class AtriaButtonComponent extends H {
    constructor() {
        super();
        this.__registerHost();
        this.__attachShadow();
        this.btnClick = createEvent(this, "btnClick", 7);
        // Props equivalent to Angular @Input()
        this.buttonId = "";
        this.buttonText = "";
        this.buttonType = 'primary';
        this.buttonIconLeft = "";
        this.buttonIconRight = "";
        this.disabled = false;
        this.loading = false;
        this.active = false;
        this.width = "";
        this.buttonRole = 'button';
        // Click Handler
        this.onClick = () => {
            if (!this.disabled && !this.loading) {
                this.btnClick.emit({
                    id: this.buttonId,
                    text: this.buttonText,
                    type: this.buttonType,
                    active: this.active
                });
            }
        };
    }
    render() {
        const classes = [
            'bh-btn',
            this.buttonType,
            this.loading ? 'bh-loading' : '',
            this.disabled ? 'disabled' : '',
            this.active ? 'active' : '',
            !this.buttonText && !this.loading && this.buttonIconLeft ? 'bh-icon-only' : ''
        ]
            .filter(Boolean)
            .join(' ');
        return (h("button", { key: 'f1ccb22e88e0032e9608606bc97bf04e8ec37e35', id: this.buttonId, class: classes, style: { width: this.width }, type: this.buttonRole, onClick: this.onClick, disabled: this.disabled }, this.buttonIconLeft && !this.loading && (h("i", { key: '89282a3959bc4554a8549decea903c737ca2c498', class: `left bh-icon bh-icon-md ${this.buttonIconLeft}`, "aria-label": this.buttonText })), this.buttonText, this.buttonIconRight && !this.loading && (h("i", { key: '46386ca2945aa40612080999891641920719bbd2', class: `right bh-icon bh-icon-md ${this.buttonIconRight}`, "aria-label": this.buttonText }))));
    }
    static get style() { return AtriaButtonStyle0; }
}, [1, "atria-button", {
        "buttonId": [1, "button-id"],
        "buttonText": [1, "button-text"],
        "buttonType": [1, "button-type"],
        "buttonIconLeft": [1, "button-icon-left"],
        "buttonIconRight": [1, "button-icon-right"],
        "disabled": [4],
        "loading": [4],
        "active": [4],
        "width": [1],
        "buttonRole": [1, "button-role"]
    }]);
function defineCustomElement$1() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["atria-button"];
    components.forEach(tagName => { switch (tagName) {
        case "atria-button":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, AtriaButtonComponent);
            }
            break;
    } });
}

const AtriaButton = AtriaButtonComponent;
const defineCustomElement = defineCustomElement$1;

export { AtriaButton, defineCustomElement };

//# sourceMappingURL=atria-button.js.map